#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
#ifndef UNIFIEDVIDEOEDITORSDK_SWIFT_H
#define UNIFIEDVIDEOEDITORSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFAudio;
@import AVFoundation;
@import BNBSdkCore;
@import CoreFoundation;
@import CoreMedia;
@import CoreVideo;
@import Dispatch;
@import Foundation;
@import ObjectiveC;
@import Photos;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="UnifiedVideoEditorSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
@class NSURL;

SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK8AREffect_")
@protocol AREffect
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSURL * _Nonnull previewImage;
@property (nonatomic, readonly, copy) NSURL * _Nonnull downloadLink;
@property (nonatomic, readonly) BOOL isDownloaded;
/// Do not store localURL. It may be different after relaunching the app.
@property (nonatomic, copy) NSURL * _Nullable localURL;
@property (nonatomic, readonly, copy) NSString * _Nullable type;
@end







@class NSCoder;

SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK21ActivityIndicatorView")
@interface ActivityIndicatorView : UIView
@property (nonatomic) CGRect bounds;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK22AlbumItemConfiguration")
@interface AlbumItemConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIImage;
@class PHAssetCollection;

SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK10AlbumModel_")
@protocol AlbumModel
/// Album name
@property (nonatomic, copy) NSString * _Nullable name;
/// Album preview
@property (nonatomic, strong) UIImage * _Nullable preview;
/// Assosiated asset collection with album
@property (nonatomic, readonly, strong) PHAssetCollection * _Nonnull assetCollection;
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK14AlbumViewModel")
@interface AlbumViewModel : NSObject <AlbumModel>
@property (nonatomic, readonly, strong) PHAssetCollection * _Nonnull assetCollection;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) UIImage * _Nullable preview;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The Albums configuration
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK19AlbumsConfiguration")
@interface AlbumsConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class NSBundle;

SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK20AlbumsViewController")
@interface AlbumsViewController : UIViewController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK28AlbumsViewControllerDelegate_")
@protocol AlbumsViewControllerDelegate
/// Tells delegate object about selection the new album
- (void)albumsViewController:(AlbumsViewController * _Nonnull)controller didSelect:(id <AlbumModel> _Nonnull)album;
/// Tells delegate object about close action
- (void)albumsViewControllerDidClose:(AlbumsViewController * _Nonnull)controller;
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK19AlertViewController")
@interface AlertViewController : UIViewController
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified contextView;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified backgroundView;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK16AppStateObserver")
@interface AppStateObserver : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSNotification;

@interface AppStateObserver (SWIFT_EXTENSION(UnifiedVideoEditorSDK))
- (void)handleApplicationWillResignActiveNotification:(NSNotification * _Nonnull)notification;
- (void)handleApplicationDidBecomeActiveNotification:(NSNotification * _Nonnull)notification;
- (void)handleWillEnterForegroundNotification:(NSNotification * _Nonnull)notification;
- (void)handleWillTerminateNotification:(NSNotification * _Nonnull)notification;
- (void)handleDidEnterBackgroundNotification:(NSNotification * _Nonnull)notification;
@end


SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK24AppStateObserverDelegate_")
@protocol AppStateObserverDelegate
- (void)applicationWillResignActive:(AppStateObserver * _Nonnull)appStateObserver;
- (void)applicationDidBecomeActive:(AppStateObserver * _Nonnull)appStateObserver;
@optional
- (void)applicationWillEnterForeground:(AppStateObserver * _Nonnull)appStateObserver;
- (void)applicationWillTerminateNotification:(AppStateObserver * _Nonnull)appStateObserver;
- (void)applicationDidEnterBackgroundNotification:(AppStateObserver * _Nonnull)appStateObserver;
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK18AudioBrowserConfig")
@interface AudioBrowserConfig : NSObject
- (nonnull instancetype)init;
@end


SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK27AudioBrowserConfigApplyable_")
@protocol AudioBrowserConfigApplyable
@property (nonatomic, strong) AudioBrowserConfig * _Nonnull config;
@end

typedef SWIFT_ENUM(NSInteger, AudioBrowserMusicSource, open) {
/// enables only Mubert music in AudioBrowser
  AudioBrowserMusicSourceMubert = 1,
/// disables Mubert music. Only local music with my files will be available
  AudioBrowserMusicSourceLocalStorageWithMyFiles = 2,
/// all sources are enabled
  AudioBrowserMusicSourceAllSources = 3,
/// enables Soundstripe music in AudioBrowser
  AudioBrowserMusicSourceSoundstripe = 4,
/// enables list of audio tracks provided by the customer
  AudioBrowserMusicSourcePredefinedList = 5,
/// enables MusicLibrary music in AudioBrowser
  AudioBrowserMusicSourceMusicLibrary = 6,
};


SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK26AudioBrowserPlayerDelegate_")
@protocol AudioBrowserPlayerDelegate
- (void)playerPlaysFrameAtTime:(NSTimeInterval)time;
- (void)didEndPlaying;
@end


SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK28AudioBrowserServiceAdoptable_")
@protocol AudioBrowserServiceAdoptable
- (void)play;
- (void)playWithPlayProgressHandler:(void (^ _Nonnull)(float))playProgressHandler;
- (void)playIn:(CMTimeRange)range playProgressHandler:(void (^ _Nullable)(float))playProgressHandler;
- (void)pause;
- (void)resume;
- (BOOL)loadWithTrackUrl:(NSURL * _Nonnull)trackUrl error:(NSError * _Nullable * _Nullable)error;
- (void)unload;
- (void)autoRepeatWithRepeat:(BOOL)repeat;
- (void)seekToStart;
- (void)seekToTime:(NSTimeInterval)time;
@property (nonatomic, strong) id <AudioBrowserPlayerDelegate> _Nullable audioBrowserServiceDelegate;
@end

@class NSUUID;

SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK17AudioBrowserTrack")
@interface AudioBrowserTrack : NSObject
/// AudioBrowserTrack constructor
/// \param uuid setup track uuid string
///
/// \param name setup track name
///
/// \param url track url
///
- (nonnull instancetype)initWithUuid:(NSUUID * _Nonnull)uuid name:(NSString * _Nonnull)name additionalName:(NSString * _Nullable)additionalName url:(NSURL * _Nullable)url coverURL:(NSURL * _Nullable)coverURL OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK26AudioBrowserTrackApplyable_")
@protocol AudioBrowserTrackApplyable
@property (nonatomic, strong) AudioBrowserTrack * _Nonnull track;
@end

@class UIScrollView;

SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK22AudioPartSelectionView")
@interface AudioPartSelectionView : UIView <UIScrollViewDelegate>
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillBeginDecelerating:(UIScrollView * _Nonnull)scrollView;
@end


/// Allows you to implement audio service functionality
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK12AudioService")
@interface AudioService : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class AVAudioPlayer;

@interface AudioService (SWIFT_EXTENSION(UnifiedVideoEditorSDK)) <AVAudioPlayerDelegate>
- (void)audioPlayerDidFinishPlaying:(AVAudioPlayer * _Nonnull)player successfully:(BOOL)flag;
@end


/// AnalyticsManager is used to interact with banuba analytics servers
SWIFT_CLASS_NAMED("BNBAnalyticsManager")
@interface BNBAnalyticsManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end





/// The background configuration.
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK23BackgroundConfiguration")
@interface BackgroundConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class NSError;
@class UIApplication;

/// Use this class to access Banuba effects from the cloud.
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK13BanubaARCloud")
@interface BanubaARCloud : NSObject
/// Storing path to the folder witch storing downloaded effects.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull effectsFolderURL;)
+ (NSURL * _Nonnull)effectsFolderURL SWIFT_WARN_UNUSED_RESULT;
/// Initialize AR cloud client with UUID string.
/// \param arCloudUrl the url that is used to provide effects.
///
/// \param embeddedEffectURLs the list of url to folders which store embedded effects, effects from these folders will be displayed as downloaded.
///
- (nonnull instancetype)initWithArCloudUrl:(NSString * _Nonnull)arCloudUrl embeddedEffectURLs:(NSArray<NSURL *> * _Nullable)embeddedEffectURLs OBJC_DESIGNATED_INITIALIZER;
/// Retrieve ar effects from cloud.
/// Also returns embedded effects which described in embeddedEffectURLs param in init method.
- (void)getAREffectsWithCompletion:(void (^ _Nonnull)(NSArray<id <AREffect>> * _Nullable, NSError * _Nullable))completion;
/// Retrieve the ar effect preview image
- (void)getArEffectPreview:(id <AREffect> _Nonnull)effect completion:(void (^ _Nonnull)(UIImage * _Nullable, NSError * _Nullable))completion;
/// Download the ar effect to local storage.
- (NSUInteger)downloadArEffect:(id <AREffect> _Nonnull)effect downloadProgress:(void (^ _Nullable)(double))downloadProgress completion:(void (^ _Nonnull)(NSURL * _Nullable, NSError * _Nullable))completion;
/// Cancel downloading effect with specific request id.
- (void)cancelDownloadingEffectWithRequestId:(NSUInteger)requestId;
/// This method needs to be called in the UIApplicationDelegate func application(_ application:, handleEventsForBackgroundURLSession identifier:, completionHandler: @escaping () -> Void).
+ (void)application:(UIApplication * _Nonnull)application handleEventsForBackgroundURLSession:(NSString * _Nonnull)identifier completionHandler:(void (^ _Nonnull)(void))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Class supports asynchronous execution block of code
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK20BanubaAsyncOperation")
@interface BanubaAsyncOperation : NSOperation
@property (nonatomic, readonly, getter=isReady) BOOL ready;
@property (nonatomic, readonly, getter=isExecuting) BOOL executing;
@property (nonatomic, readonly, getter=isFinished) BOOL finished;
@property (nonatomic, readonly, getter=isAsynchronous) BOOL asynchronous;
+ (NSSet<NSString *> * _Nonnull)keyPathsForValuesAffectingValueForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)start;
/// Subclasses must implement this to perform their work and they must not call <code>super</code>. The default implementation of this function throws an exception.
- (void)main;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UINavigationController;
@class MusicLibraryConfiguration;

/// Audio browser main entity and entry point.
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK18BanubaAudioBrowser")
@interface BanubaAudioBrowser : NSObject
/// BanubaAudioBrowser constructor
/// \param audioBrowserConfig contains all necessary configurations for the audio browser
///
/// \param slideInTransitioningDelegate bottom sheet transition
///
/// \param audioService service used to interact with audio files
///
/// \param selectedTrack selected track
///
/// \param isMusicLibraryEnabled is music library enabled
///
/// \param isSoundstripeEnabled is soundstripe enabled
///
/// \param isAudioPartSelectionEnabled is audio part selection enabled
///
/// \param videoDuration the duration of video
///
- (nonnull instancetype)initWithAudioBrowserConfig:(AudioBrowserConfig * _Nullable)audioBrowserConfig audioService:(id <AudioBrowserServiceAdoptable> _Nullable)audioService selectedTrack:(AudioBrowserTrack * _Nullable)selectedTrack isMusicLibraryEnabled:(BOOL)isMusicLibraryEnabled isSoundstripeEnabled:(BOOL)isSoundstripeEnabled token:(NSString * _Nonnull)token isAudioPartSelectionEnabled:(BOOL)isAudioPartSelectionEnabled videoDuration:(double)videoDuration OBJC_DESIGNATED_INITIALIZER;
+ (void)setMubertKeysWithLicense:(NSString * _Nonnull)license token:(NSString * _Nonnull)token;
+ (void)setPredefinedList:(NSArray<AudioBrowserTrack *> * _Nonnull)music;
/// Get reference to audio browser navigation controller
- (UINavigationController * _Nonnull)getAudioBrowserController SWIFT_WARN_UNUSED_RESULT;
/// Setting music library configuration
+ (void)setMusicLibraryConfiguration:(MusicLibraryConfiguration * _Nonnull)configuration;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class PIPSwitchLayoutSetting;
@class PIPPlayerLayoutSetting;
@class PIPCameraLayoutSetting;
@protocol SDKInputServicingDelegate;

SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK18BanubaCameraModule")
@interface BanubaCameraModule : NSObject
@property (nonatomic) BOOL isPIPSessionAlreadySetup;
@property (nonatomic) BOOL isPIPSession;
@property (nonatomic, copy) NSURL * _Nullable pipVideoURL;
@property (nonatomic, strong) PIPSwitchLayoutSetting * _Nullable pipSwitchSetting;
@property (nonatomic, strong) PIPPlayerLayoutSetting * _Nullable pipPlayerSetting;
@property (nonatomic, strong) PIPCameraLayoutSetting * _Nullable pipCameraSetting;
/// Setup the camera if needed
@property (nonatomic) BOOL isCameraEnabled;
@property (nonatomic) BOOL isLoaded;
@property (nonatomic) BOOL allowProcessing;
@property (nonatomic, strong) id <SDKInputServicingDelegate> _Nullable inputDelegate;
+ (void)initializeWithSdkToken:(NSString * _Nonnull)sdkToken videoSize:(CGSize)videoSize videoPreset:(AVCaptureSessionPreset _Nonnull)videoPreset useHEVCCodecIfPossibleForRecorder:(BOOL)useHEVCCodecIfPossibleForRecorder arCloudPath:(NSString * _Nullable)arCloudPath;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface BanubaCameraModule (SWIFT_EXTENSION(UnifiedVideoEditorSDK)) <BNBEffectEventListener>
- (void)onEffectEvent:(NSString * _Nonnull)name params:(NSDictionary<NSString *, NSString *> * _Nonnull)params;
@end


@class ExternalAudioConfiguration;
@class NSValue;

SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK18SDKOutputServicing_")
@protocol SDKOutputServicing
@property (nonatomic, readonly) BOOL isRecording;
@property (nonatomic, readonly) BOOL isEnoughDiskSpaceForRecording;
- (void)startVideoCapturingWithFileURL:(NSURL * _Nullable)fileURL startTimeForVideoTexture:(double)startTimeForVideoTexture externalAudioConfiguration:(ExternalAudioConfiguration * _Nullable)externalAudioConfiguration progress:(void (^ _Nonnull)(CMTime))progress didStart:(void (^ _Nullable)(void))didStart shouldSkipFrame:(BOOL (^ _Nullable)(void))shouldSkipFrame periodicProgressTimeInterval:(NSTimeInterval)periodicProgressTimeInterval boundaryTimes:(NSArray<NSValue *> * _Nonnull)boundaryTimes boundaryHandler:(void (^ _Nonnull)(CMTime))boundaryHandler totalDuration:(NSTimeInterval)totalDuration itemDuration:(NSTimeInterval)itemDuration completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
- (void)stopVideoCapturingWithCancel:(BOOL)cancel;
@end


@interface BanubaCameraModule (SWIFT_EXTENSION(UnifiedVideoEditorSDK)) <SDKOutputServicing>
@property (nonatomic, readonly) BOOL isRecording;
@property (nonatomic, readonly) BOOL isEnoughDiskSpaceForRecording;
- (void)startVideoCapturingWithFileURL:(NSURL * _Nullable)fileURL startTimeForVideoTexture:(double)startTimeForVideoTexture externalAudioConfiguration:(ExternalAudioConfiguration * _Nullable)externalAudioConfiguration progress:(void (^ _Nonnull)(CMTime))progress didStart:(void (^ _Nullable)(void))didStart shouldSkipFrame:(BOOL (^ _Nullable)(void))shouldSkipFrame periodicProgressTimeInterval:(NSTimeInterval)periodicProgressTimeInterval boundaryTimes:(NSArray<NSValue *> * _Nonnull)boundaryTimes boundaryHandler:(void (^ _Nonnull)(CMTime))boundaryHandler totalDuration:(NSTimeInterval)totalDuration itemDuration:(NSTimeInterval)itemDuration completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
- (void)stopVideoCapturingWithCancel:(BOOL)cancel;
@end


SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK23SDKBeautyEffectManaging_")
@protocol SDKBeautyEffectManaging
@property (nonatomic) BOOL isBeautificationEnabled;
@property (nonatomic, readonly) BOOL supportsIntensity;
@property (nonatomic) double intensity;
- (BOOL)toggleBeautification SWIFT_WARN_UNUSED_RESULT;
- (void)resetIntensity;
@end


@interface BanubaCameraModule (SWIFT_EXTENSION(UnifiedVideoEditorSDK)) <SDKBeautyEffectManaging>
@property (nonatomic) BOOL isBeautificationEnabled;
@property (nonatomic, readonly) BOOL supportsIntensity;
@property (nonatomic) double intensity;
- (BOOL)toggleBeautification SWIFT_WARN_UNUSED_RESULT;
- (void)resetIntensity;
@end

@class UIColor;
@class AVURLAsset;

SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK26SDKEffectsTextureServicing_")
@protocol SDKEffectsTextureServicing
- (void)effectAddImageTextureWithImage:(UIImage * _Nonnull)image backgroundColor:(UIColor * _Nonnull)backgroundColor;
- (void)setupDefaultImageTexture;
- (void)stopVideoTextureIfNeeded;
- (void)effectAddVideoTextureWithAsset:(AVURLAsset * _Nonnull)asset backgroundColor:(UIColor * _Nonnull)backgroundColor;
- (void)effectReloadTexturePreviewWithStartTime:(NSTimeInterval)startTime endTime:(NSTimeInterval)endTime itemDuration:(NSTimeInterval)itemDuration;
- (void)unloadEffectTexture;
@end


@interface BanubaCameraModule (SWIFT_EXTENSION(UnifiedVideoEditorSDK)) <SDKEffectsTextureServicing>
- (void)setupDefaultImageTexture;
- (void)effectAddImageTextureWithImage:(UIImage * _Nonnull)image backgroundColor:(UIColor * _Nonnull)backgroundColor;
- (void)effectAddVideoTextureWithAsset:(AVURLAsset * _Nonnull)asset backgroundColor:(UIColor * _Nonnull)backgroundColor;
- (void)stopVideoTextureIfNeeded;
- (void)effectReloadTexturePreviewWithStartTime:(NSTimeInterval)startTime endTime:(NSTimeInterval)endTime itemDuration:(NSTimeInterval)itemDuration;
- (void)unloadEffectTexture;
@end

enum CameraModuleSessionType : NSInteger;

SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK17SDKInputServicing_")
@protocol SDKInputServicing
@property (nonatomic, readonly) BOOL isFrontCamera;
@property (nonatomic, readonly) float zoomFactor;
@property (nonatomic, readonly) enum CameraModuleSessionType currentCameraSessionType;
@property (nonatomic, strong) id <SDKInputServicingDelegate> _Nullable inputDelegate;
- (void)focusAt:(CGPoint)point useContinuousDetection:(BOOL)useContinuousDetection;
- (float)setZoomFactor:(float)zoomFactor SWIFT_WARN_UNUSED_RESULT;
- (void)toggleCameraWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)startCamera;
- (void)startAudioCapturing;
- (void)stopAudioCapturing;
- (void)setCameraSessionType:(enum CameraModuleSessionType)type;
- (AVCaptureTorchMode)setTorchWithMode:(AVCaptureTorchMode)mode;
- (AVCaptureTorchMode)toggleTorch SWIFT_WARN_UNUSED_RESULT;
@end


@interface BanubaCameraModule (SWIFT_EXTENSION(UnifiedVideoEditorSDK)) <SDKInputServicing>
@property (nonatomic, readonly) float zoomFactor;
@property (nonatomic, readonly) BOOL isFrontCamera;
@property (nonatomic, readonly) enum CameraModuleSessionType currentCameraSessionType;
- (void)focusAt:(CGPoint)point useContinuousDetection:(BOOL)useContinuousDetection;
- (float)setZoomFactor:(float)zoomFactor SWIFT_WARN_UNUSED_RESULT;
- (void)toggleCameraWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)startCamera;
- (void)startAudioCapturing;
- (void)stopAudioCapturing;
- (void)setCameraSessionType:(enum CameraModuleSessionType)type;
- (AVCaptureTorchMode)setTorchWithMode:(AVCaptureTorchMode)mode SWIFT_WARN_UNUSED_RESULT;
- (AVCaptureTorchMode)toggleTorch SWIFT_WARN_UNUSED_RESULT;
@end

@protocol RenderEffect;
@protocol EffectSubtypeModificationsEventListener;

SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK19SDKEffectsServicing_")
@protocol SDKEffectsServicing <SDKEffectsTextureServicing>
@property (nonatomic, readonly) BOOL isMaskLoaded;
- (void)loadMaskWithName:(NSString * _Nonnull)name synchronous:(BOOL)synchronous;
- (void)enableBlur;
- (void)effectDidBeginApplying;
- (void)effectDidEndApplying;
- (void)effectDidResetApplying;
- (void)effectDidChangeState;
- (void)unloadMask;
- (void)removeAllFilters;
- (void)applyFilter:(id <RenderEffect> _Nonnull)filter;
- (void)removeFilter:(id <RenderEffect> _Nonnull)filter;
- (void)setEffectSubtypeModificationsEventListener:(id <EffectSubtypeModificationsEventListener> _Nonnull)listener;
- (NSArray<NSString *> * _Nonnull)effectsPathsWithIncludeBeautyEffect:(BOOL)includeBeautyEffect SWIFT_WARN_UNUSED_RESULT;
@end


@interface BanubaCameraModule (SWIFT_EXTENSION(UnifiedVideoEditorSDK)) <SDKEffectsServicing>
- (void)enableBlur;
@property (nonatomic, readonly) BOOL isMaskLoaded;
- (void)loadMaskWithName:(NSString * _Nonnull)name synchronous:(BOOL)synchronous;
- (void)unloadMask;
- (void)removeAllFilters;
- (void)applyFilter:(id <RenderEffect> _Nonnull)filter;
- (void)removeFilter:(id <RenderEffect> _Nonnull)filter;
- (void)setEffectSubtypeModificationsEventListener:(id <EffectSubtypeModificationsEventListener> _Nonnull)listener;
- (NSArray<NSString *> * _Nonnull)effectsPathsWithIncludeBeautyEffect:(BOOL)includeBeautyEffect SWIFT_WARN_UNUSED_RESULT;
- (void)effectDidBeginApplying;
- (void)effectDidEndApplying;
- (void)effectDidResetApplying;
- (void)effectDidChangeState;
@end


@interface BanubaCameraModule (SWIFT_EXTENSION(UnifiedVideoEditorSDK))
- (void)seekPIPPlayerTo:(NSTimeInterval)time;
- (void)startPIPPlayer;
- (void)stopPIPPlayer;
- (void)setPIPPlayerVolume:(float)volume;
- (void)setupPIPSessionWithVideoURL:(NSURL * _Nonnull)url playerSetting:(PIPPlayerLayoutSetting * _Nonnull)playerSetting cameraSetting:(PIPCameraLayoutSetting * _Nonnull)cameraSetting switchSetting:(PIPSwitchLayoutSetting * _Nonnull)switchSetting;
- (void)startPIPSessionIfNeededWithSetting:(PIPPlayerLayoutSetting * _Nonnull)setting completion:(void (^ _Nullable)(void))completion;
- (void)applyPIPCameraSettingIfNeeded:(PIPCameraLayoutSetting * _Nonnull)setting restoreSession:(BOOL)restoreSession;
- (void)applyPIPPlayerSettingIfNeeded:(PIPPlayerLayoutSetting * _Nonnull)setting restoreSession:(BOOL)restoreSession;
- (void)applyPIPSwitchSettingIfNeeded:(PIPSwitchLayoutSetting * _Nonnull)setting restoreSession:(BOOL)restoreSession;
@end


SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK15SDKPIPServicing_")
@protocol SDKPIPServicing
@property (nonatomic) BOOL isPIPSessionAlreadySetup;
@property (nonatomic) BOOL isPIPSession;
@property (nonatomic, readonly) BOOL isPIPPlayerReadyToProvideData;
@property (nonatomic, copy) NSURL * _Nullable pipVideoURL;
@property (nonatomic, strong) PIPSwitchLayoutSetting * _Nullable pipSwitchSetting;
@property (nonatomic, strong) PIPPlayerLayoutSetting * _Nullable pipPlayerSetting;
@property (nonatomic, strong) PIPCameraLayoutSetting * _Nullable pipCameraSetting;
- (void)seekPIPPlayerTo:(NSTimeInterval)time;
- (void)startPIPPlayer;
- (void)stopPIPPlayer;
- (void)setupPIPSessionWithVideoURL:(NSURL * _Nonnull)url playerSetting:(PIPPlayerLayoutSetting * _Nonnull)playerSetting cameraSetting:(PIPCameraLayoutSetting * _Nonnull)cameraSetting switchSetting:(PIPSwitchLayoutSetting * _Nonnull)switchSetting;
- (void)startPIPSessionIfNeededWithSetting:(PIPPlayerLayoutSetting * _Nonnull)setting completion:(void (^ _Nullable)(void))completion;
- (void)applyPIPCameraSettingIfNeeded:(PIPCameraLayoutSetting * _Nonnull)setting restoreSession:(BOOL)restoreSession;
- (void)applyPIPPlayerSettingIfNeeded:(PIPPlayerLayoutSetting * _Nonnull)setting restoreSession:(BOOL)restoreSession;
- (void)applyPIPSwitchSettingIfNeeded:(PIPSwitchLayoutSetting * _Nonnull)setting restoreSession:(BOOL)restoreSession;
- (void)setPIPPlayerVolume:(float)volume;
@end

@class NSAttributedString;

SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK12CameraModule_")
@protocol CameraModule <SDKBeautyEffectManaging, SDKEffectsServicing, SDKInputServicing, SDKOutputServicing, SDKPIPServicing>
@property (nonatomic, readonly) BOOL isLoaded;
@property (nonatomic) BOOL allowProcessing;
@property (nonatomic) BOOL autoStart;
@property (nonatomic) BOOL isCameraEnabled;
@property (nonatomic, readonly, strong) dispatch_queue_t _Nullable renderQueue;
- (void)setup;
- (void)setMaxFacesWithFacesCount:(int32_t)facesCount;
- (void)destroy;
- (void)startWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)stopWithCompletion:(void (^ _Nullable)(void))completion;
- (void)setRenderTargetWithView:(UIView * _Nonnull)view;
- (void)removeRenderTarget;
- (void)takeSnapshotWithHandler:(void (^ _Nonnull)(UIImage * _Nullable))handler;
- (UIView * _Nonnull)getRendererView SWIFT_WARN_UNUSED_RESULT;
- (void)startRenderLoop;
- (void)stopRenderLoop;
- (void)addFPSListener:(void (^ _Nullable)(NSAttributedString * _Nonnull))listener;
@end


@interface BanubaCameraModule (SWIFT_EXTENSION(UnifiedVideoEditorSDK)) <CameraModule>
@property (nonatomic, readonly, strong) dispatch_queue_t _Nullable renderQueue;
@property (nonatomic) BOOL autoStart;
@property (nonatomic, readonly) BOOL isPIPPlayerReadyToProvideData;
- (void)addFPSListener:(void (^ _Nullable)(NSAttributedString * _Nonnull))listener;
- (void)setMaxFacesWithFacesCount:(int32_t)facesCount;
- (void)setup;
- (void)destroy;
- (void)takeSnapshotWithHandler:(void (^ _Nonnull)(UIImage * _Nullable))handler;
- (void)startWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)stopWithCompletion:(void (^ _Nullable)(void))completion;
- (void)setRenderTargetWithView:(UIView * _Nonnull)view;
- (void)removeRenderTarget;
- (UIView * _Nonnull)getRendererView SWIFT_WARN_UNUSED_RESULT;
- (void)startRenderLoop;
- (void)stopRenderLoop;
@end

enum GalleryItemType : NSInteger;
@class AVPlayerItem;

SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK11GalleryItem_")
@protocol GalleryItem <NSObject>
/// Video representation url asset
@property (nonatomic, readonly, strong) AVURLAsset * _Nullable urlAsset;
/// Preview for gallery item
@property (nonatomic, strong) UIImage * _Nullable preview;
/// GalleryItem duration
@property (nonatomic, readonly) NSTimeInterval duration;
/// Type can be video, photo or unknown
@property (nonatomic, readonly) enum GalleryItemType type;
/// Requests preview for displaying in gallery list
- (void)requestPreviewWithSize:(CGSize)size synchronously:(BOOL)synchronously handler:(void (^ _Nonnull)(UIImage * _Nullable))handler;
/// Requests photo with desired size
- (void)requestPhotoWithSize:(CGSize)size progressHandler:(BOOL (^ _Nullable)(double))progressHandler handler:(void (^ _Nonnull)(UIImage * _Nullable, NSError * _Nullable))handler;
/// Requests video url asset
- (void)requestAVURLAssetWithProgressHandler:(BOOL (^ _Nullable)(double))progressHandler handler:(void (^ _Nonnull)(AVURLAsset * _Nullable, NSError * _Nullable))handler;
/// Requests video player item
- (void)requestAVPlayerItemWithProgressHandler:(BOOL (^ _Nullable)(double))progressHandler handler:(void (^ _Nonnull)(AVPlayerItem * _Nullable, NSError * _Nullable))handler;
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK17BanubaGalleryItem")
@interface BanubaGalleryItem : NSObject <GalleryItem>
@property (nonatomic, strong) UIImage * _Nullable preview;
@property (nonatomic, readonly) NSTimeInterval duration;
@property (nonatomic, readonly, strong) AVURLAsset * _Nullable urlAsset;
@property (nonatomic, readonly) enum GalleryItemType type;
- (void)requestAVURLAssetWithProgressHandler:(BOOL (^ _Nullable)(double))progressHandler handler:(void (^ _Nonnull)(AVURLAsset * _Nullable, NSError * _Nullable))handler;
- (void)requestAVPlayerItemWithProgressHandler:(BOOL (^ _Nullable)(double))progressHandler handler:(void (^ _Nonnull)(AVPlayerItem * _Nullable, NSError * _Nullable))handler;
- (void)requestPreviewWithSize:(CGSize)size synchronously:(BOOL)synchronously handler:(void (^ _Nonnull)(UIImage * _Nullable))handler;
- (void)requestPhotoWithSize:(CGSize)size progressHandler:(BOOL (^ _Nullable)(double))progressHandler handler:(void (^ _Nonnull)(UIImage * _Nullable, NSError * _Nullable))handler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface BanubaGalleryItem (SWIFT_EXTENSION(UnifiedVideoEditorSDK))
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK32BaseTrackSelectionViewController")
@interface BaseTrackSelectionViewController : UINavigationController
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=5.0);
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK14CameraLutStage")
@interface CameraLutStage : NSObject
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic) BOOL isActive;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK12RenderEffect_")
@protocol RenderEffect
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) BOOL isLoaded;
@property (nonatomic) BOOL isActive;
- (void)load;
- (void)unload;
- (void)applyWithPixelBuffer:(CVPixelBufferRef _Nonnull)pixelBuffer;
@end


@interface CameraLutStage (SWIFT_EXTENSION(UnifiedVideoEditorSDK)) <RenderEffect>
@property (nonatomic, readonly) BOOL isLoaded;
- (void)load;
- (void)unload;
- (void)applyWithPixelBuffer:(CVPixelBufferRef _Nonnull)pixelBuffer;
@end


typedef SWIFT_ENUM(NSInteger, CameraModuleSessionType, open) {
  CameraModuleSessionTypeFrontVideo = 0,
  CameraModuleSessionTypeBackVideo = 1,
  CameraModuleSessionTypeFrontPhoto = 2,
  CameraModuleSessionTypeBackPhoto = 3,
};

@class CALayer;

/// Simple circular progress view
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK20CircularProgressView")
@interface CircularProgressView : UIView
- (void)layoutSublayersOfLayer:(CALayer * _Nonnull)layer;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// The Composition Timeline configuration
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK32CompositionTimelineConfiguration")
@interface CompositionTimelineConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK13CountdownView")
@interface CountdownView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)drawRect:(CGRect)rect;
@end




/// Setups drafts feature
typedef SWIFT_ENUM(NSInteger, DraftsFeatureConfig, open) {
/// Drafts enabled. Alert asking for saving video to drafts will be presented after editing a video. Drafts button on the start screen  is displayed.
  DraftsFeatureConfigEnabled = 0,
/// Drafts enabled. No alert will be presented after editing a video. Drafts button on the start screen is displayed.
  DraftsFeatureConfigEnabledSaveToDraftsByDefault = 1,
/// Drafts disabled completely. Drafts button on the start screen is hidden.
  DraftsFeatureConfigDisabled = 2,
/// Drafts enabled. Cover screen will not be presented after editing a video.
  DraftsFeatureConfigEnabledAskIfSaveNotExport = 3,
};


/// Holder contains set of speed and visual effexts
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK25EditorEffectsConfigHolder")
@interface EditorEffectsConfigHolder : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK11EffectModel")
@interface EffectModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK39EffectSubtypeModificationsEventListener_")
@protocol EffectSubtypeModificationsEventListener
- (void)didChangeEffectSubtype:(NSString * _Nonnull)subtypeName;
- (void)didInitiateEffectSubtype:(NSString * _Nonnull)subtypeName;
@end


/// Default exposure animation view
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK21ExposureAnimationView")
@interface ExposureAnimationView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)drawRect:(CGRect)rect;
@end


/// Setups adding external audio asset to result asset as audio track
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK26ExternalAudioConfiguration")
@interface ExternalAudioConfiguration : NSObject
/// Audio asset url
@property (nonatomic, readonly, copy) NSURL * _Nonnull url;
/// Offset inside audio asset
@property (nonatomic, readonly) NSTimeInterval offset;
/// Preferred audio track volume
@property (nonatomic, readonly) float preferredVolume;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK27FeedbackAlertViewController")
@interface FeedbackAlertViewController : UIViewController
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end






@class UIButton;

SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK22FullscreenActivityView")
@interface FullscreenActivityView : UIView
@property (nonatomic, weak) IBOutlet UIButton * _Nullable additionalButton;
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// The Gallery configuration
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK20GalleryConfiguration")
@interface GalleryConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



typedef SWIFT_ENUM(NSInteger, GalleryItemType, open) {
  GalleryItemTypePhoto = 0,
  GalleryItemTypeVideo = 1,
  GalleryItemTypeUnknown = 2,
};


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK14GalleryManager")
@interface GalleryManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class PHChange;

@interface GalleryManager (SWIFT_EXTENSION(UnifiedVideoEditorSDK)) <PHPhotoLibraryChangeObserver>
- (void)photoLibraryDidChange:(PHChange * _Nonnull)changeInstance;
@end


typedef SWIFT_ENUM(NSInteger, GalleryMediaType, open) {
  GalleryMediaTypeVideo = 0,
  GalleryMediaTypePhoto = 1,
};


/// Setups gallery selection behaviour
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK25GallerySelectionBehaviour")
@interface GallerySelectionBehaviour : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK21GalleryViewController")
@interface GalleryViewController : UIViewController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK28GalleryViewControllerFactory_")
@protocol GalleryViewControllerFactory <NSObject>
/// Creates GalleryViewController
- (GalleryViewController * _Nonnull)makeGalleryViewControllerWithConfiguration:(GalleryConfiguration * _Nonnull)configuration albumsConfiguration:(AlbumsConfiguration * _Nonnull)albumsConfiguration selectionBehaviour:(GallerySelectionBehaviour * _Nonnull)selectionBehaviour SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK28GalleryViewControllerBuilder")
@interface GalleryViewControllerBuilder : NSObject <GalleryViewControllerFactory>
- (GalleryViewController * _Nonnull)makeGalleryViewControllerWithConfiguration:(GalleryConfiguration * _Nonnull)configuration albumsConfiguration:(AlbumsConfiguration * _Nonnull)albumsConfiguration selectionBehaviour:(GallerySelectionBehaviour * _Nonnull)selectionBehaviour SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class ProgressHandler;

SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK29GalleryViewControllerDelegate_")
@protocol GalleryViewControllerDelegate
/// Tells delegate object about starting asynchronous operations at the gallery.
/// BanubaVideoEditorSDK showing full-screen spinner by this event. It can help to prevent unnecessary actions from a user.
- (void)galleryViewController:(GalleryViewController * _Nonnull)controller didStartExportWith:(ProgressHandler * _Nonnull)progressHandler;
/// Tells delegate object about finishing asynchronous operations at the gallery
- (void)galleryViewController:(GalleryViewController * _Nonnull)controller didEndExportWith:(NSError * _Nullable)error hideProgressViewCompletion:(void (^ _Nonnull)(void))hideProgressViewCompletion;
/// Tells delegate object about the closing gallery.
- (void)galleryViewControllerDidClose:(GalleryViewController * _Nonnull)controller;
/// Tells delegate object about completion picking gallery items.
- (void)galleryViewControllerDone:(GalleryViewController * _Nonnull)controller withGalleryItems:(NSArray<id <GalleryItem>> * _Nonnull)items;
/// Tells delegate object about completion picking gallery items for AutoCut feature
- (void)galleryViewControllerDoneForAutoCut:(GalleryViewController * _Nonnull)controller withGalleryItems:(NSArray<id <GalleryItem>> * _Nonnull)items;
/// Tells delegate object that he should present message.
/// In BanubaVideoEditorSDK it presents popup message.
- (void)galleryViewController:(GalleryViewController * _Nonnull)controller presentMessage:(NSString * _Nonnull)message;
@end



SWIFT_CLASS("_TtCC21UnifiedVideoEditorSDK35SmallActivityIndicatorConfiguration12GradientType")
@interface GradientType : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class GradientColorConfiguration;
@protocol ImageConfigurationProtocol;

@interface GradientType (SWIFT_EXTENSION(UnifiedVideoEditorSDK))
+ (GradientType * _Nonnull)color:(GradientColorConfiguration * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
+ (GradientType * _Nonnull)image:(id <ImageConfigurationProtocol> _Nonnull)image SWIFT_WARN_UNUSED_RESULT;
@end


/// The image configuration
SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK26ImageConfigurationProtocol_")
@protocol ImageConfigurationProtocol
@property (nonatomic, readonly, strong) UIImage * _Nullable image;
@property (nonatomic, readonly, strong) UIColor * _Nullable tintColor;
@end


/// The image configuration
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK18ImageConfiguration")
@interface ImageConfiguration : NSObject <ImageConfigurationProtocol>
/// Image tint color
/// Default is nil.
@property (nonatomic, strong) UIColor * _Nullable tintColor;
/// The image stored or instance by name
@property (nonatomic, readonly, strong) UIImage * _Nullable image;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK19KeyboardLayoutGuide")
@interface KeyboardLayoutGuide : UILayoutGuide
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class TimeBomb;

SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK7License")
@interface License : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull token;
@property (nonatomic, readonly, copy) NSString * _Nonnull clientId;
@property (nonatomic, readonly) int32_t maxFaces;
/// Video Editor Analytics
@property (nonatomic, readonly) BOOL collectAnalytics;
/// FAR Analytics
@property (nonatomic, readonly) BOOL supportsAnalytics;
@property (nonatomic, readonly) BOOL videoEditorSupportsFaceAR;
@property (nonatomic, readonly) BOOL hasFaceARFeatures;
@property (nonatomic, readonly) BOOL supportsPiP;
@property (nonatomic, readonly) BOOL supportsMusicLibrary;
@property (nonatomic, readonly) BOOL supportsSoundstripe;
@property (nonatomic, readonly) BOOL supportsBgSeparation;
@property (nonatomic, readonly) BOOL supportsCaptions;
@property (nonatomic, readonly) BOOL supportsAutoCut;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull postProcessingEffects;
@property (nonatomic, readonly, copy) NSString * _Nullable arCloudURL;
@property (nonatomic, readonly, strong) TimeBomb * _Nullable timeBomb;
@property (nonatomic, readonly) BOOL supportsFHD;
@property (nonatomic, readonly) BOOL isExportAPIEnabled;
@property (nonatomic, readonly) BOOL isPlaybackAPIEnabled;
@property (nonatomic, readonly) BOOL isVESDKEnabled;
@property (nonatomic, readonly) BOOL isPhotoEditorSDKEnabled;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
+ (License * _Nullable)getLicenseFromToken:(NSString * _Nonnull)token SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK25MaskPostprocessingService")
@interface MaskPostprocessingService : NSObject
/// MaskPostprocessingService constructor
/// \param renderSize setup render size
///
- (nonnull instancetype)initWithRenderSize:(CGSize)renderSize OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK27SDKMaskPostprocessServicing_")
@protocol SDKMaskPostprocessServicing
- (void)processVideoFrame:(CVPixelBufferRef _Nonnull)from to:(CVPixelBufferRef _Nonnull)to time:(CMTime)time;
- (void)surfaceCreatedWith:(CGSize)size;
- (void)setEffectSize:(CGSize)size;
- (void)loadEffectWithPath:(NSString * _Nonnull)path;
@end


@interface MaskPostprocessingService (SWIFT_EXTENSION(UnifiedVideoEditorSDK)) <SDKMaskPostprocessServicing>
- (void)processVideoFrame:(CVPixelBufferRef _Nonnull)from to:(CVPixelBufferRef _Nonnull)to time:(CMTime)time;
- (void)surfaceCreatedWith:(CGSize)size;
- (void)setEffectSize:(CGSize)size;
- (void)loadEffectWithPath:(NSString * _Nonnull)path;
@end


/// Configures music library endpoints adn etc.
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK25MusicLibraryConfiguration")
@interface MusicLibraryConfiguration : NSObject
/// Music library authentication header name
@property (nonatomic, readonly, copy) NSString * _Nonnull authHeaderName;
/// Music library authentication header value
@property (nonatomic, readonly, copy) NSString * _Nonnull authHeaderValue;
/// Music library home screen url
@property (nonatomic, readonly, copy) NSString * _Nonnull homeURL;
/// Music library recent tracks url
@property (nonatomic, readonly, copy) NSString * _Nonnull recentsURL;
/// Music library favorite tracks url
@property (nonatomic, readonly, copy) NSString * _Nonnull favoritesURL;
/// Music library add favorite track url
@property (nonatomic, readonly, copy) NSString * _Nonnull addFavoriteURL;
/// Music library remove favorite track url
@property (nonatomic, readonly, copy) NSString * _Nonnull removeFavoriteURL;
/// Music library all tracks url
@property (nonatomic, readonly, copy) NSString * _Nonnull tracksURL;
/// Music library search tracks url
@property (nonatomic, readonly, copy) NSString * _Nonnull searchTracksURL;
/// Music library genres url
@property (nonatomic, readonly, copy) NSString * _Nonnull genresURL;
/// Music library collections url
@property (nonatomic, readonly, copy) NSString * _Nonnull collectionsURL;
/// Music library genre tracks url
@property (nonatomic, readonly, copy) NSString * _Nonnull genreTracksURL;
/// Music library collection tracks url
@property (nonatomic, readonly, copy) NSString * _Nonnull collectionTracksURL;
/// Music library tracks page size
/// Default is 20
@property (nonatomic, readonly) NSInteger tracksPerPage;
/// Music library info view no matches icon
@property (nonatomic, readonly, strong) ImageConfiguration * _Nullable noMatchesIcon;
/// Music library info view attention icon
@property (nonatomic, readonly, strong) ImageConfiguration * _Nullable attentionIcon;
/// MusicLibraryConfiguration constructor
/// \param authHeaderName music library authentication header name
///
/// \param authHeaderValue music library authentication header value
///
/// \param homeURL home url used for music library home screen
///
/// \param recentsURL url used for all recent music library tracks
///
/// \param favoritesURL url used for all favorite music library tracks
///
/// \param addFavoriteURL url used to add music library track to favorites
///
/// \param removeFavoriteURL url used to remove music library track from favorites
///
/// \param tracksURL tracks url used for all music library tracks
///
/// \param searchTracksURL url used to search tracks by title
///
/// \param genresURL genres url used for music library genres
///
/// \param collectionsURL collections url used for music library collections
///
/// \param genreTracksURL genre tracks url used for music library selected genre tracks
///
/// \param collectionTracksURL collection tracks url used for music library selected collection tracks
///
/// \param noMatchesIcon image configuration for no matches info view
///
/// \param attentionIcon image configuration for attention info view
///
- (nonnull instancetype)initWithAuthHeaderName:(NSString * _Nonnull)authHeaderName authHeaderValue:(NSString * _Nonnull)authHeaderValue homeURL:(NSString * _Nonnull)homeURL recentsURL:(NSString * _Nonnull)recentsURL favoritesURL:(NSString * _Nonnull)favoritesURL addFavoriteURL:(NSString * _Nonnull)addFavoriteURL removeFavoriteURL:(NSString * _Nonnull)removeFavoriteURL tracksURL:(NSString * _Nonnull)tracksURL searchTracksURL:(NSString * _Nonnull)searchTracksURL genresURL:(NSString * _Nonnull)genresURL collectionsURL:(NSString * _Nonnull)collectionsURL genreTracksURL:(NSString * _Nonnull)genreTracksURL collectionTracksURL:(NSString * _Nonnull)collectionTracksURL tracksPerPage:(NSInteger)tracksPerPage noMatchesIcon:(ImageConfiguration * _Nullable)noMatchesIcon attentionIcon:(ImageConfiguration * _Nullable)attentionIcon OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end








SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK7NibView")
@interface NibView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


enum PIPCameraLayoutSettings : NSInteger;

SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK22PIPCameraLayoutSetting")
@interface PIPCameraLayoutSetting : NSObject
@property (nonatomic, readonly) enum PIPCameraLayoutSettings setting;
- (nonnull instancetype)initWithSetting:(enum PIPCameraLayoutSettings)setting OBJC_DESIGNATED_INITIALIZER;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PIPCameraLayoutSetting * _Nonnull round;)
+ (PIPCameraLayoutSetting * _Nonnull)round SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PIPCameraLayoutSetting * _Nonnull square;)
+ (PIPCameraLayoutSetting * _Nonnull)square SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PIPCameraLayoutSetting * _Nonnull original;)
+ (PIPCameraLayoutSetting * _Nonnull)original SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PIPCameraLayoutSetting * _Nonnull centered;)
+ (PIPCameraLayoutSetting * _Nonnull)centered SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, PIPCameraLayoutSettings, open) {
  PIPCameraLayoutSettingsRound = 0,
  PIPCameraLayoutSettingsSquare = 1,
  PIPCameraLayoutSettingsOriginal = 2,
  PIPCameraLayoutSettingsCentered = 3,
};


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK14PIPShapeDrawer")
@interface PIPShapeDrawer : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK9PIPPlayer")
@interface PIPPlayer : PIPShapeDrawer
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end

enum PIPPlayerLayoutSettings : NSInteger;

SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK22PIPPlayerLayoutSetting")
@interface PIPPlayerLayoutSetting : NSObject
@property (nonatomic, readonly) enum PIPPlayerLayoutSettings setting;
- (nonnull instancetype)initWithSetting:(enum PIPPlayerLayoutSettings)setting OBJC_DESIGNATED_INITIALIZER;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PIPPlayerLayoutSetting * _Nonnull floating;)
+ (PIPPlayerLayoutSetting * _Nonnull)floating SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PIPPlayerLayoutSetting * _Nonnull topBottom;)
+ (PIPPlayerLayoutSetting * _Nonnull)topBottom SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PIPPlayerLayoutSetting * _Nonnull react;)
+ (PIPPlayerLayoutSetting * _Nonnull)react SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PIPPlayerLayoutSetting * _Nonnull leftRight;)
+ (PIPPlayerLayoutSetting * _Nonnull)leftRight SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, PIPPlayerLayoutSettings, open) {
  PIPPlayerLayoutSettingsFloating = 0,
  PIPPlayerLayoutSettingsTopBottom = 1,
  PIPPlayerLayoutSettingsReact = 2,
  PIPPlayerLayoutSettingsLeftRight = 3,
};

typedef SWIFT_ENUM(NSInteger, PIPShapeAdapter, open) {
  PIPShapeAdapterNone = 0,
  PIPShapeAdapterOval = 1,
  PIPShapeAdapterCircle = 2,
  PIPShapeAdapterRoundRect = 3,
  PIPShapeAdapterRoundSquare = 4,
};




SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK19PIPShapeTypeAdapter")
@interface PIPShapeTypeAdapter : NSObject
@property (nonatomic, readonly) enum PIPShapeAdapter setting;
@property (nonatomic, readonly) CGFloat radius;
- (nonnull instancetype)initWithSetting:(enum PIPShapeAdapter)setting radius:(CGFloat)radius OBJC_DESIGNATED_INITIALIZER;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PIPShapeTypeAdapter * _Nonnull none;)
+ (PIPShapeTypeAdapter * _Nonnull)none SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PIPShapeTypeAdapter * _Nonnull oval;)
+ (PIPShapeTypeAdapter * _Nonnull)oval SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PIPShapeTypeAdapter * _Nonnull circle;)
+ (PIPShapeTypeAdapter * _Nonnull)circle SWIFT_WARN_UNUSED_RESULT;
+ (PIPShapeTypeAdapter * _Nonnull)roundRectWithRadius:(CGFloat)radius SWIFT_WARN_UNUSED_RESULT;
+ (PIPShapeTypeAdapter * _Nonnull)roundSquareWithRadius:(CGFloat)radius SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


enum PIPSwitchLayoutSettings : NSInteger;

SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK22PIPSwitchLayoutSetting")
@interface PIPSwitchLayoutSetting : NSObject
@property (nonatomic, readonly) enum PIPSwitchLayoutSettings setting;
- (nonnull instancetype)initWithSetting:(enum PIPSwitchLayoutSettings)setting OBJC_DESIGNATED_INITIALIZER;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PIPSwitchLayoutSetting * _Nonnull switchVerticallyUP;)
+ (PIPSwitchLayoutSetting * _Nonnull)switchVerticallyUP SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PIPSwitchLayoutSetting * _Nonnull switchVerticallyDown;)
+ (PIPSwitchLayoutSetting * _Nonnull)switchVerticallyDown SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PIPSwitchLayoutSetting * _Nonnull switchHorizontalRight;)
+ (PIPSwitchLayoutSetting * _Nonnull)switchHorizontalRight SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PIPSwitchLayoutSetting * _Nonnull switchHorizontalLeft;)
+ (PIPSwitchLayoutSetting * _Nonnull)switchHorizontalLeft SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PIPSwitchLayoutSetting * _Nonnull switchCameraPip;)
+ (PIPSwitchLayoutSetting * _Nonnull)switchCameraPip SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PIPSwitchLayoutSetting * _Nonnull switchVideoPip;)
+ (PIPSwitchLayoutSetting * _Nonnull)switchVideoPip SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, PIPSwitchLayoutSettings, open) {
  PIPSwitchLayoutSettingsSwitchVerticallyUP = 0,
  PIPSwitchLayoutSettingsSwitchVerticallyDown = 1,
  PIPSwitchLayoutSettingsSwitchHorizontalRight = 2,
  PIPSwitchLayoutSettingsSwitchHorizontalLeft = 3,
  PIPSwitchLayoutSettingsSwitchCameraPiP = 4,
  PIPSwitchLayoutSettingsSwitchVideoPiP = 5,
};


/// UIImageView playable preview.
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK15PlayablePreview")
@interface PlayablePreview : UIImageView
/// Layer class
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK26PopoverAlertViewController")
@interface PopoverAlertViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIGestureRecognizer;
@class UITouch;

@interface PopoverAlertViewController (SWIFT_EXTENSION(UnifiedVideoEditorSDK)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
@end




/// Gallery exporting progress handler object
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK15ProgressHandler")
@interface ProgressHandler : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK22ProgressViewController")
@interface ProgressViewController : UIViewController
- (void)viewDidLoad;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end





typedef SWIFT_ENUM(NSInteger, RenderBehaviorAdapter, open) {
  RenderBehaviorAdapterFullScreen = 0,
  RenderBehaviorAdapterVerticalSplitUp = 1,
  RenderBehaviorAdapterVerticalSplitDown = 2,
  RenderBehaviorAdapterHorizontalSplitLeft = 3,
  RenderBehaviorAdapterHorizontalSplitRight = 4,
  RenderBehaviorAdapterPip = 5,
};







SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK25SDKInputServicingDelegate_")
@protocol SDKInputServicingDelegate
- (void)willOutputWithPixelBuffer:(CVPixelBufferRef _Nonnull)pixelBuffer;
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK9SDKLogger")
@interface SDKLogger : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





SWIFT_CLASS_NAMED("SessionDelegate")
@interface KFSessionDelegate : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURLSession;
@class NSURLSessionDataTask;
@class NSURLResponse;
@class NSData;
@class NSURLSessionTask;
@class NSURLAuthenticationChallenge;
@class NSURLCredential;
@class NSHTTPURLResponse;
@class NSURLRequest;

@interface KFSessionDelegate (SWIFT_EXTENSION(UnifiedVideoEditorSDK)) <NSURLSessionDataDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveResponse:(NSURLResponse * _Nonnull)response completionHandler:(void (^ _Nonnull)(NSURLSessionResponseDisposition))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
@end

@class UIPresentationController;
@protocol UIViewControllerAnimatedTransitioning;
@protocol UIViewControllerInteractiveTransitioning;

SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK26SlideInPresentationManager")
@interface SlideInPresentationManager : NSObject <UIViewControllerTransitioningDelegate>
- (nonnull instancetype)init;
- (UIPresentationController * _Nullable)presentationControllerForPresentedViewController:(UIViewController * _Nonnull)presented presentingViewController:(UIViewController * _Nullable)presenting sourceViewController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)presented presentingController:(UIViewController * _Nonnull)presenting sourceController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerInteractiveTransitioning> _Nullable)interactionControllerForPresentation:(id <UIViewControllerAnimatedTransitioning> _Nonnull)animator SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerInteractiveTransitioning> _Nullable)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning> _Nonnull)animator SWIFT_WARN_UNUSED_RESULT;
@end


/// The activity indicator configuration.
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK35SmallActivityIndicatorConfiguration")
@interface SmallActivityIndicatorConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// The gradient type.
typedef SWIFT_ENUM(NSInteger, GradientTypeAdapter, open) {
  GradientTypeAdapterColor = 0,
  GradientTypeAdapterImage = 1,
};



/// The gradient configuration.
SWIFT_CLASS("_TtCC21UnifiedVideoEditorSDK35SmallActivityIndicatorConfiguration26GradientColorConfiguration")
@interface GradientColorConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




/// The button configuration with text styling and text.
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK23TextButtonConfiguration")
@interface TextButtonConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The text configuration
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK17TextConfiguration")
@interface TextConfiguration : NSObject
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK8TimeBomb")
@interface TimeBomb : NSObject
@property (nonatomic, readonly) NSInteger yearBegin;
@property (nonatomic, readonly) NSInteger monBegin;
@property (nonatomic, readonly) NSInteger dayBegin;
@property (nonatomic, readonly) NSInteger yearEnd;
@property (nonatomic, readonly) NSInteger monEnd;
@property (nonatomic, readonly) NSInteger dayEnd;
@property (nonatomic, readonly) BOOL isExpired;
@end

@protocol TimeLineDataSourceDelegate;

SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK18TimeLineDataSource_")
@protocol TimeLineDataSource
/// TimeLineDataSource delegate object
@property (nonatomic, strong) id <TimeLineDataSourceDelegate> _Nullable delegate;
/// timeline preview
@property (nonatomic, strong) UIImage * _Nullable preview;
/// Asset duration
@property (nonatomic, readonly) CMTime duration;
/// Loaded thumbnails
@property (nonatomic, readonly, copy) NSArray<UIImage *> * _Nonnull thumbnails;
/// Is fetching thumbnails finished
@property (nonatomic, readonly) BOOL isAllThumbnailsFetched;
/// Thumbnails count to fetch
@property (nonatomic, readonly) NSInteger thumbnailsCount;
/// Thumbnails height
@property (nonatomic, readonly) CGFloat thumbnailHeight;
/// Load signle thumbnail for specific second
- (void)loadPreviewWithCompletion:(void (^ _Nonnull)(UIImage * _Nullable))completion at:(double)second;
/// Returns thumbnail at index
- (UIImage * _Nullable)getImageAt:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
/// Load thumbnails with completion
- (void)loadTimelineThumbsWithCompletion:(void (^ _Nullable)(void))completion;
@end


/// TimeLineDataSourceDelegate notify delegate objects about fetching thumbs actions
SWIFT_PROTOCOL("_TtP21UnifiedVideoEditorSDK26TimeLineDataSourceDelegate_")
@protocol TimeLineDataSourceDelegate
@optional
/// timelineDataSource did preload preivew
- (void)timelineDataSource:(id <TimeLineDataSource> _Nonnull)timelineDataSource didPreloadPreview:(UIImage * _Nonnull)preview;
@required
/// timelineDataSource did load thumb image at index
- (void)timelineDataSource:(id <TimeLineDataSource> _Nonnull)timelineDataSource didLoadImage:(UIImage * _Nonnull)image at:(NSInteger)index;
/// timelineDataSource did finish fetching all thumbs
- (void)timelineDataSourceDidFinishThumbnailFetch:(id <TimeLineDataSource> _Nonnull)timelineDataSource;
@end


/// The Time line configuration
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK25TrimTimeLineConfiguration")
@interface TrimTimeLineConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end






















@interface UIImage (SWIFT_EXTENSION(UnifiedVideoEditorSDK))
/// This method doesn’t use copying data, since it can heavily affect performance and memory usage
/// (for high quality photos like 3024x4032 each copy of data has size ~30 Mb, and on slower devices making copy can take up to 0.2 sec).
/// Common idea - we have NSData object which contains raw data, used for UIImage creation. Since we don’t copy underlying data, we need to take control on
/// lifetime of NSData object, otherwise internal content of UIImage will be destroyed.
/// So, we manually transform NSData object into unmanaged pointer and increase its retain count by passRetained call, and in special callback of CGDataProvider,
/// which will be called when UIImage is no longer needed, we release that unmanaged pointer by takeRetainedValue call, to prevent memory leaks.
- (nullable instancetype)initWithBgraDataNoCopy:(NSData * _Nonnull)bgraDataNoCopy width:(NSInteger)width height:(NSInteger)height;
- (CVPixelBufferRef _Nullable)makeBgraPixelBuffer SWIFT_WARN_UNUSED_RESULT;
@end
























SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK28VideoEditorActivityIndicator")
@interface VideoEditorActivityIndicator : UIView
@property (nonatomic) CGRect bounds;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// The video editor launch configuration
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK23VideoEditorLaunchConfig")
@interface VideoEditorLaunchConfig : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK30VideoImageEffectDrawersFactory")
@interface VideoImageEffectDrawersFactory : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Image composition for slideshow creation
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK22VideoImagesComposition")
@interface VideoImagesComposition : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK13VideoSequence")
@interface VideoSequence : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end





@interface VideoSequence (SWIFT_EXTENSION(UnifiedVideoEditorSDK))
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end









/// VideoTimeLineCollectionViewHandler displays timeLineDataSource in collectionView
SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK34VideoTimeLineCollectionViewHandler")
@interface VideoTimeLineCollectionViewHandler : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class UICollectionView;
@class UICollectionViewLayout;
@class NSIndexPath;

@interface VideoTimeLineCollectionViewHandler (SWIFT_EXTENSION(UnifiedVideoEditorSDK)) <UICollectionViewDelegateFlowLayout>
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end


@interface VideoTimeLineCollectionViewHandler (SWIFT_EXTENSION(UnifiedVideoEditorSDK)) <TimeLineDataSourceDelegate>
- (void)timelineDataSource:(id <TimeLineDataSource> _Nonnull)timelineDataSource didPreloadPreview:(UIImage * _Nonnull)preview;
- (void)timelineDataSource:(id <TimeLineDataSource> _Nonnull)timelineDataSource didLoadImage:(UIImage * _Nonnull)image at:(NSInteger)index;
- (void)timelineDataSourceDidFinishThumbnailFetch:(id <TimeLineDataSource> _Nonnull)timelineDataSource;
@end

@class UICollectionViewCell;

@interface VideoTimeLineCollectionViewHandler (SWIFT_EXTENSION(UnifiedVideoEditorSDK)) <UICollectionViewDataSource, UICollectionViewDelegate>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC21UnifiedVideoEditorSDK10ZipArchive")
@interface ZipArchive : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
